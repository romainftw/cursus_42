/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   push_swap_radx.old                                 :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: roperrin <roperrin@student.42.fr>          +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/02/10 11:30:58 by roperrin          #+#    #+#             */
/*   Updated: 2023/02/19 17:16:15 by roperrin         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "push_swap.h"

void	third_nb(t_list *slack_a)
{
	t_list	*temp;
	t_list	*temp_a;

	temp = slack_a;
	temp_a = slack_a;
	if (temp->index == 0)
	{
		rra_function(&temp);
		s_function(&temp);
	}
	else if (temp->index == 1)
	{
		temp = temp->next;
		if (temp->index == 0)
			s_function(&slack_a);
		else
			rra_function(&slack_a);
	}
	else if (temp->index == 2)
	{
		temp = temp->next;
		if (temp->index == 0)
			r_function(&slack_a);
		else if (temp->index == 1)
		{
			s_function(&slack_a);
			rra_function(&slack_a);
		}
		temp_a = slack_a;
	printf("------------A 3---------------\n");
	while (temp_a)
	{
		printf("------[%d]\n", temp_a->index);
		printf("%d\n", temp_a->content);
		temp_a = temp_a->next;
	}
	printf("------------A 3---------------\n");
	}
}

void	four_nb(t_list *slack_a, t_list *slack_b)
{
	t_list	*temp;
	t_list	*temp_a;
	t_list	*temp_b;
	int		max;

	max = high_in_slack_whitout_ind(slack_a);
	temp = slack_a;
	while (slack_a->content != max)
	{
		r_function(&slack_a);
	}
		pb_function(&slack_a, &slack_b);
				temp_b = slack_b;
	printf("------------B pa---------------\n");
	while (temp_b)
	{
		printf("------[%d]\n", temp_b->index);
		printf("%d\n", temp_b->content);
		temp_b = temp_b->next;
	}
	printf("------------B---pa------------\n");
		third_nb(slack_a);
		pa_function(&slack_a, &slack_b);
		r_function(&slack_a);
	temp_a = slack_a;
	printf("------------A---------------\n");
	while (temp_a)
	{
		printf("------[%d]\n", temp_a->index);
		printf("%d\n", temp_a->content);
		temp_a = temp_a->next;
	}
	printf("------------A---------------\n");
		temp_b = slack_b;
	printf("------------B---------------\n");
	while (temp_b)
	{
		printf("------[%d]\n", temp_b->index);
		printf("%d\n", temp_b->content);
		temp_b = temp_b->next;
	}
	printf("------------B---------------\n");
}

void	third_nb(t_list *slack_a)
// {
// 	if (check_order_in_lst(slack_a))
// 	{
// 		if (slack_a->index < slack_a->next->index && \
// 		slack_a->next->index > slack_a->next->next->index && \
// 		slack_a->index < slack_a->next->next->index)
// 		{
// 			rra_function(&slack_a);
// 			s_function(&slack_a);
// 		}
// 		else if (slack_a->index > slack_a->next->index && \
// 		slack_a->next->index < slack_a->next->next->index \
// 		&& slack_a->index < slack_a->next->next->index)
// 			s_function(&slack_a);
// 		else if (slack_a->index < slack_a->next->index && \
// 		slack_a->next->index > slack_a->next->next->index)
// 			rra_function(&slack_a);
// 		else if (slack_a->index > slack_a->next->index && \
// 		slack_a->next->index < slack_a->next->next->index)
// 			r_function(&slack_a);
// 		else if (slack_a->index > slack_a->next->index && \
// 		slack_a->next->index > slack_a->next->next->index)
// 		{
// 			r_function(&slack_a);
// 			s_function(&slack_a);
// 		}
// 	}
// }